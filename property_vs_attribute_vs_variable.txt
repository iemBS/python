# Property
- Properties are a special kind of attribute.
- Good explanation of a property
    When Python encounters the following code it looks up eggs in spam. Then, 
    it examines eggs to see if it has a __get__, __set__, or __delete__ methods. 
    If it does, it's a property. 

      spam = SomeObject()
      print(spam.eggs)

    If it is a property, instead of just returning the eggs object (as it would for any other attribute) it will call the 
    __get__ method (since we were doing lookup) and return whatever that method returns. 

# Attribute
- A property is just a specific type of attribute. 
- Can be an attribute of a module, function, or variable. 
- All functions have the __doc__ built-in attribute. This attribute returns the returns the doc string defined in the function source code.
. The value of an attribute is specified when it is created, unless it is a zero-length attribute.  
- An attribute cannot have attributes.

# Variable
- A variable is created the moment you first assign a value to it.
- Below are examples of variables:
    x = 5
    y = "John"
- Variables do not need to be declared with any particular type and can even change type after they have been set.
- A variable name must start with a letter or the underscore character
- A variable name cannot start with a number
- A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )
- Variable names are case-sensitive (age, Age and AGE are three different variables)
- Variables are created with a name, type, and shape before they are assigned data values. So, a variable may exist with no values. 
- A variable may have attributes.





